{
  "name": "Scrollyaan",
  "tagline": " Scrollyaan is a pure JavaScript library for firing callbacks   when either element appear on Viewport or reached to particular scroll position.",
  "body": "# scrollyaan\r\n\r\n`Scrollyaan` is a lightweight script for firing callback when -\r\n\r\n  - A HTML element appear on screen/ viewport.\r\n  - the user has scrolled particular pixels.(currently, support only in Y direction)\r\n\r\n# Usage\r\n  load script in your HTML page.\r\n\r\n```html\r\n//scrollyaan script file\r\n<script src=\"file_location/scrollyaan.min.js\"></script>\r\n\r\n```\r\n## options\r\nscrollyaan currently have two option's\r\n\r\n\r\n### inViewport\r\ninViewport is a function, For any element of which a callback should be fire when appearing in screen or viewport.\r\n\r\n```javascript\r\nscrollyaan.inViewport(element , callback , offset , iteration );\r\n```\r\n<table>\r\n<tr><td>element</td><td> a valid dom element or target. </td></tr>\r\n<tr><td>callback </td><td> a callback function. </td></tr>\r\n<tr><td>offset </td><td>  a number between 1 to 100 which define distance in parcentage  from top of viewport.</td></tr>\r\n<tr><td>iteration </td><td> a boolean value which define callback should be fire each it appear on viewport or not.</td></tr>\r\n</table>\r\n\r\n### atIndex\r\n for adding a location at which callback should be fire.\r\n ```javascript\r\n scrollyaan.atIndex(pixels , callback);\r\n ```\r\n <table>\r\n <tr><td>pixels</td><td>a number which define distance in pixel from top of the whole page(not viewport).</td></tr>\r\n <tr><td>callback</td><td> a callback function</td></tr>\r\n</table>\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}